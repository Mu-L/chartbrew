name: Quick Tests

on:
  push:
    paths:
      - 'server/**'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'server/**'
      - '.github/workflows/test.yml'

jobs:
  test:
    name: Quick Tests (MySQL)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install dependencies
      run: |
        cd server
        npm ci

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Start Docker services
      run: |
        # Docker daemon should already be running in GitHub Actions
        docker --version
        docker ps

    - name: Run ESLint
      run: |
        cd server
        npm run lint

    - name: Run tests with MySQL
      run: |
        cd server
        export CB_DB_DIALECT_DEV=mysql
        export FORCE_CONTAINERS=true
        npm run test:run
      env:
        CI: true
        NODE_ENV: test

    # Coverage is handled in CI workflow to avoid duplication

  # Test with SQLite fallback (in case containers fail)
  test-sqlite-fallback:
    runs-on: ubuntu-latest
    name: Test SQLite Fallback
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install dependencies
      run: |
        cd server
        npm ci

    - name: Run tests with SQLite fallback
      run: |
        cd server
        export CB_DB_DIALECT_DEV=sqlite
        export FORCE_CONTAINERS=false
        npm run test:run
      env:
        CI: true
        NODE_ENV: test
